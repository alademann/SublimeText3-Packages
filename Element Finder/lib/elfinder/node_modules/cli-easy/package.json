{
  "name": "cli-easy",
  "description": "Fluent (i.e. chainable) syntax for generating vows tests against CLI tools.",
  "version": "0.1.0",
  "author": {
    "name": "Nodejitsu",
    "email": "info@nodejitsu.com"
  },
  "contributors": [
    {
      "name": "Charlie Robbins",
      "email": "charlie.robbins@gmail.com"
    },
    {
      "name": "Fedor Indutny",
      "email": "fedor.indutny@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/flatiron/cli-easy.git"
  },
  "keywords": [
    "tools",
    "testing",
    "cli",
    "vows"
  ],
  "dependencies": {
    "vows": ">= 0.5.8"
  },
  "main": "./lib/cli-easy",
  "scripts": {
    "test": "vows --spec test/*-test.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "readme": "# CLIeasy \n\nA fluent (i.e. chainable) syntax for generating vows tests for CLI applications.\n\n## Purpose\nCLIeasy is designed to be a simple way to test CLI applications in [node.js][0] and Javascript. The primary design goal was to reduce the number of lines of test code required to fully cover all primary and edge use cases of a given CLI application. \n\n## Getting Started\nIf you're going to use CLIeasy (and I hope you do), it's worth taking a moment to understand the way that [vows][1] manages flow control. Read up here on [vowsjs.org][2] (Under \"Structure of a test suite\"), or just remember vows uses this grammatical structure:\n\n```\n  Suite   → Batch*\n  Batch   → Context*\n  Context → Topic? Vow* Context*\n```\n\nGot it? Good. There is a 1-to-1 relationship between a CLIeasy suite and a vows suite; CLIeasy is essentially a simpler syntax to manage a particular set of vows-based tests that conform to this pattern:\n\n1. Tests are performed by starting a CLI application \n2. Assertions are made against the `stdout` and `stderr` output.\n3. Rinse. Repeat.\n\nHere's a sample of the boilerplate code that CLIeasy eliminates:\n\n``` js\n  var exec = require('child_process').exec,\n      vows = require('vows'),\n      assert = require('assert');\n  \n  vows.describe('uname').addBatch({\n    \"When using uname\": {\n      \"calling without arguments\": {\n        topic: function () {\n          exec('uname', this.callback);\n        },\n        \"should return `Linux`\": function (err, stdout, stderr) {\n          assert.match(stdout, /Linux/);\n        }\n      }\n    }\n  }).export(module);\n```\n\nThis same code can be implemented like this using CLIeasy:\n\n``` js\n  var CLIeasy = require('cli-easy'),\n      assert = require('assert');\n      \n  CLIeasy.describe('uname');\n    .use('uname')\n    .discuss('when using uname')\n    .discuss('calling without arguments')\n      .expect('should return Linux', 'Linux\\n')\n    .export(module);\n```\n\n<a name=\"using-cli-easy\">\n## Using CLIeasy in your own project\nThere are two ways to use CLIeasy in your own project:\n\n1. Using npm\n2. Using vows directly\n\n### Using CLIeasy with npm\nIf you've used the `npm test` command in [npm][5] before, this should be nothing new. You can read more about the [npm test command here][6]. All you need to do is add the following to your `package.json` file:\n\n``` js\n {\n   \"dependencies\": {\n     \"cli-easy\": \"0.1.x\"\n   },\n   \"scripts\": {\n     \"test\": \"vows test/*-test.js\"\n   }\n }\n```\n\n**Note:** `test/*-test.js` is at your discretion. It's just an expression for all test files in your project. \n\nAfter adding this to your `package.json` file you can run the following to execute your tests:\n\n``` bash\n  $ cd path/to/your/project\n  $ npm install\n  $ npm test\n```\n\n### Using CLIeasy with vows\nWhen you install CLIeasy or take it as a dependency in your `package.json` file it will not install [vows][5] globally, so to use vows you must install it globally.\n\n``` bash\n  $ [sudo] npm install vows -g\n```\n\nAfter installing vows you can simply run it from inside your project:\n\n``` bash\n  $ cd /path/to/your/project\n  $ vows\n```\n\n## Installation\n\n### Installing npm (node package manager)\n\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing CLIeasy\n\n``` bash\n  $ [sudo] npm install cli-easy\n```\n\n## Run Tests\nTests are written in vows and give complete coverage of all APIs and storage engines.\n\n``` bash\n  $ npm test\n```\n\n## Roadmap\n\n1. [Get feedback][6] on what else could be exposed through this library.\n2. Improve it.\n3. Repeat (1) + (2).\n\n#### Authors: [Fedor Indutny](http://nodejitsu.com), [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://nodejs.org\n[1]: http://indexzero.github.com/cli-easy\n[2]: http://vowsjs.org\n[7]: http://npmjs.org\n[8]: https://github.com/isaacs/npm/blob/master/doc/test.md\n[6]: http://github.com/flatiron/cli-easy/issues\n",
  "_id": "cli-easy@0.1.0",
  "_from": "cli-easy@0.1.x"
}
